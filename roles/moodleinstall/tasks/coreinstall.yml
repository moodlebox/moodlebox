---
- name: Get Moodle from git repository
  ansible.builtin.git:
    repo: 'git://git.moodle.org/moodle.git'
    version: '{{ moodlebox_moodle_branch }}'
    dest: '{{ moodlebox_moodle_source_dir }}'
    depth: 1

- name: Create Moodle data directories and set adequate permissions
  ansible.builtin.file:
    path: '{{ item }}'
    state: 'directory'
    owner: 'www-data'
    group: '{{ moodlebox_username }}'
    mode: 'ug+w,o-w'
    recurse: 'yes'
  with_items:
    - '{{ moodlebox_moodle_source_dir }}'
    - '{{ moodlebox_moodle_data_dir }}/repository'
    - '{{ moodlebox_moodle_data_dir }}/temp'
    - '{{ moodlebox_moodle_data_dir }}/backup'

- name: Set SGID permission on Moodle data directory
  ansible.builtin.file:
    path: '{{ moodlebox_moodle_data_dir }}'
    state: 'directory'
    mode: 'g+s'
    recurse: 'yes'

- name: Create file and USB repository directories
  ansible.builtin.file:
    path: '{{ item.path }}'
    state: 'directory'
    owner: '{{ moodlebox_username }}'
    group: 'www-data'
    mode: 'g+s'
  with_items:
    - { path: '/home/{{ moodlebox_username }}/files' }
    - { path: '/media/{{ moodlebox_username }}' }

- name: Link file and USB repository directories
  ansible.builtin.file:
    src: '{{ item.src }}'
    path: '{{ item.path }}'
    state: 'link'
  with_items:
    - { src: '/home/{{ moodlebox_username }}/files', path: '{{ moodlebox_moodle_data_dir }}/repository/files' }
    - { src: '/media/{{ moodlebox_username }}', path: '{{ moodlebox_moodle_data_dir }}/repository/usb' }

- name: Configure Moodle temporary storage
  ansible.posix.mount:
    path: '{{ item.name }}'
    src: 'tmpfs'
    fstype: 'tmpfs'
    opts: 'size={{ item.size }},mode=775,uid=www-data,gid=www-data'
    dump: '0'
    passno: '0'
    state: 'mounted'
  with_items:
    - { name: '{{ moodlebox_moodle_data_dir }}/temp', size: '64M' }
    - { name: '{{ moodlebox_moodle_data_dir }}/sessions', size: '16M' }

# https://github.com/HCPSS/ansible-role-moodle/blob/master/tasks/install.yml
- name: Install Moodle via CLI
  ansible.builtin.command:
    cmd: >
      /usr/bin/php "{{ moodlebox_moodle_source_dir }}/admin/cli/install.php"
      --lang="{{ moodlebox_moodle_lang }}"
      --wwwroot="http://{{ moodlebox_hostname }}.{{ moodlebox_tld }}"
      --dataroot="{{ moodlebox_moodle_data_dir }}"
      --dbtype="mariadb"
      --dbname="{{ moodlebox_moodle_db }}"
      --prefix="{{ moodlebox_moodle_db_prefix }}"
      --dbuser="{{ moodlebox_db_username }}"
      --dbpass="{{ moodlebox_db_password }}"
      --fullname="{{ moodlebox_moodle_name }}"
      --shortname="{{ moodlebox_moodle_name }}"
      --summary="{{ moodlebox_moodle_summary }}"
      --adminuser="{{ moodlebox_moodle_username }}"
      --adminpass="{{ moodlebox_moodle_password }}"
      --adminemail="{{ moodlebox_moodle_username }}@{{ moodlebox_hostname }}.invalid"
      --non-interactive
      --allow-unstable
      --agree-license
    chdir: '{{ moodlebox_moodle_source_dir }}'
    creates: '{{ moodlebox_moodle_source_dir }}/config.php'

- name: Set Moodle config file owner, group and permissions
  ansible.builtin.file:
    path: '{{ moodlebox_moodle_source_dir }}/config.php'
    owner: 'www-data'
    group: '{{ moodlebox_username }}'
    mode: 'ug+w,o-w'

- name: Write extra parameters to the Moodle config file
  ansible.builtin.lineinfile:
    path: '{{ moodlebox_moodle_source_dir }}/config.php'
    line: '$CFG->{{ item.name }} = {{ item.value }};'
    insertbefore: '^\$CFG->directorypermissions'
  with_items:
    - { name: 'backuptempdir', value: "'{{ moodlebox_moodle_data_dir }}/backup'" }
    - { name: 'xsendfile', value: "'X-Accel-Redirect'" }
    - { name: 'xsendfilealiases', value: "array('/dataroot/' => $CFG->dataroot)" }
    - { name: 'routerconfigured', value: 'true' }
    # prettier-ignore
    - { name: 'customfiletypes', value: "array(\n  (object)array(\n    'extension' => 'crt',\n    'icon' => 'sourcecode',\n    'type' => 'application/x-x509-ca-cert',\n    'customdescription' => 'X.509 CA certificate'\n  )\n)"}
    - { name: 'site_is_public', value: 'false' }
    - { name: 'showcampaigncontent', value: 'false' }
    - { name: 'showservicesandsupportcontent', value: 'false' }
